"Create CPPProcessor with a custom root directory"root := '../models/suchai-flight-software/src'.p := CPPProcessor new.p processRootFolder: root asFileReference.p resolveDependencies."Separate modules in system, drivers and os"allSystemModules := p modules    select: [ :m | '*/system*' match: m filename ].allDrivers := p modules    select: [ :m | '*/drivers/Linux/*' match: m filename ].allOs := p modules select: [ :m | '*/os/Linux/*' match: m filename ]."Create relevantModules list"relevantModules := allSystemModules , allDrivers , allOs.relevantModules := relevantModules    reject: [ :m | '*/util*' match: m filename ].relevantModules := relevantModules    reject: [ :m | '*/globals*' match: m filename ].relevantModules := relevantModules    reject: [ :m | '*pthread_queue*' match: m filename ]."Create color palette"color1 := Color r: 0.651 g: 0.808 b: 0.89.color2 := Color r: 0.022 g: 0.471 b: 0.706.color3 := Color r: 0.698 g: 0.875 b: 0.541.color4 := Color r: 0.2 g: 0.627 b: 0.173.color5 := Color r: 0.984 g: 0.604 b: 0.6.color6 := Color r: 0.89 g: 0.102 b: 0.11.color7 := Color r: 0.992 g: 0.749 b: 0.435."Create a RTMondrian instance"b := RTMondrian new.b interaction popupText: #suchaiDisplayName."Assign color palette"b shape rectangle    color: Color darkGray;    width: [ :cls | (cls dependentModules size + 1) * 20 * 0.6 ];    height: [ :cls | cls loc * 0.6 ];    if: [ :f | '*/repo*' match: f filename ] color: color3;    if: [ :f | '*/cmd*' match: f filename ] color: color4;    if: [ :f | '*/task*' match: f filename ] color: color5;    if: [ :f | '*/drivers*' match: f filename ] color: color1;    if: [ :f | '*/main*' match: f filename ] color: color2;    if: [ :f | '*Dispatcher*' match: f filename ] color: color7;    if: [ :f | '*Executer*' match: f filename ] color: color6;    if: [ :f | ('*/task*' match: f filename) and: [ f dependOn: '*/cmd*' ] ]        borderColor: Color red.        "Create interactions"b interaction showEdge    connectToAll: #dependentModules;    shape: (RTArrowedLine new        withVerticallAttachPoint;        color: (Color orange alpha: 0.7);        width: 6).b interaction    highlightNeighbors: #dependentModules    color: Color orange.b nodes: relevantModules.b shape arrowedLine    headOffset: 0.8;    withVerticallAttachPoint;    color: (Color black alpha: 0.7);    width: 2.b edges    moveBehind;    connectToAll: #dependentModules.b layout sugiyama    verticalGap: 50;    horizontalGap: 25.b build."Create legend"lb := RTLegendBuilder new.lb setAsFixed.lb view: b view.lb addText: 'Modules Types'.lb addColor: color5 text: 'Clients'.lb addColor: color3 text: 'Repositories'.lb addColor: color4 text: 'Commands'.lb addColor: color1 text: 'Drivers'.lb addColor: color7 text: 'Invoker'.lb addColor: color6 text: 'Receiver'.lb addColor: Color darkGray text: 'Operating System'.lb addColor: color2 text: 'main'.lb addRectanglePolymetricWidth: 'number of dependencies'    height: 'lines of code'    box: 'Module'.lb build